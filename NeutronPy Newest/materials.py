import sys
from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
import numpy as np
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from os import listdir, path

class Materials(QtWidgets.QWidget):
    def __init__(self):
        super(Materials, self).__init__()
        self.initUI()

    def initUI(self):
        #Create the table layout
        self.tableWidget = QtWidgets.QTableWidget(self)
        self.tableWidget.setGeometry(QtCore.QRect(0, 0, 767, 180))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 6, item)

        #Load materials from file
        self.loadmat_button = QToolButton(self)
        self.loadmat_button.setText('Load Materials')
        self.loadmat_button.clicked.connect(self.loadmat_file)
        self.loadmat_button.move(5, 210)
        self.label = QtWidgets.QLabel(self)
        self.label.move(130, 212)
        self.label.setText('None Selected')

        #Save materials
        self.savemat_button = QToolButton(self)
        self.savemat_button.setText('Save Materials')
        self.savemat_button.clicked.connect(self.savemat_file)
        self.savemat_button.move(5, 240)

        self.retranslateUi(QtWidgets.QWidget())

        self.show()

    def retranslateUi(self, integrated):
        _translate = QtCore.QCoreApplication.translate

        #populate the header labels with text
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("integrated", "Material 1"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("integrated", "Material 2"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("integrated", "Material 3"))
        item = self.tableWidget.verticalHeaderItem(3)
        item.setText(_translate("integrated", "Material 4"))
        item = self.tableWidget.verticalHeaderItem(4)
        item.setText(_translate("integrated", "Material 5"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("integrated", "Element Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("integrated", "Abundance"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("integrated", "Atomic Mass"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("integrated", "Atomic Fraction"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("integrated", "Density"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("integrated", "Thickness"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("integrated", "Component"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)

        #populate the entry boxes with blank values
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(0, 1)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(0, 2)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(0, 3)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(0, 4)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(0, 5)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(0, 6)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(1, 0)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(1, 1)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(1, 2)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(1, 3)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(1, 4)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(1, 5)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(1, 6)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(2, 0)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(2, 1)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(2, 2)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(2, 3)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(2, 4)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(2, 5)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(2, 6)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(3, 0)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(3, 1)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(3, 2)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(3, 3)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(3, 4)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(3, 5)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(3, 6)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(4, 0)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(4, 1)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(4, 2)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(4, 3)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(4, 4)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(4, 5)
        item.setText(_translate("integrated", " "))
        item = self.tableWidget.item(4, 6)
        item.setText(_translate("integrated", " "))
        self.tableWidget.setSortingEnabled(__sortingEnabled)


    #returns a 2D pandas frame containing al of the table's values
    def saveInput(self):
        rows = self.tableWidget.rowCount()
        columns = self.tableWidget.columnCount()
        new_frame = pd.DataFrame(index=range(rows))
        for i in range(rows):
            for j in range(columns):
                text = self.tableWidget.item(i,j).text()
                try:
                    value = float(text)
                except:
                    if j == 0 :
                        value = text
                    else:
                        value = 'NaN'
                new_frame.loc[i, j] = value
        print(new_frame)
        return new_frame

    def loadmat_file(self):
        self.selectedFile = QFileDialog.getOpenFileName(self, "Load Characteristics")
        if path.isfile(self.selectedFile[0]): 
            pathArr = self.selectedFile[0].split('/')
            self.label.setText(pathArr[-1])
            file = open(self.selectedFile[0], 'r')
            fileString = file.read()
            textArr = fileString.split('/')

            _translate = QtCore.QCoreApplication.translate
            item = self.tableWidget.item(0, 0)
            item.setText(_translate("integrated", textArr[0]))
            item = self.tableWidget.item(0, 1)
            item.setText(_translate("integrated", textArr[1]))
            item = self.tableWidget.item(0, 2)
            item.setText(_translate("integrated", textArr[2]))
            item = self.tableWidget.item(0, 3)
            item.setText(_translate("integrated", textArr[3]))
            item = self.tableWidget.item(0, 4)
            item.setText(_translate("integrated", textArr[4]))
            item = self.tableWidget.item(0, 5)
            item.setText(_translate("integrated", textArr[5]))
            item = self.tableWidget.item(0, 6)
            item.setText(_translate("integrated", textArr[6]))
            item = self.tableWidget.item(1, 0)
            item.setText(_translate("integrated", textArr[7]))
            item = self.tableWidget.item(1, 1)
            item.setText(_translate("integrated", textArr[8]))
            item = self.tableWidget.item(1, 2)
            item.setText(_translate("integrated", textArr[9]))
            item = self.tableWidget.item(1, 3)
            item.setText(_translate("integrated", textArr[10]))
            item = self.tableWidget.item(1, 4)
            item.setText(_translate("integrated", textArr[11]))
            item = self.tableWidget.item(1, 5)
            item.setText(_translate("integrated", textArr[12]))
            item = self.tableWidget.item(1, 6)
            item.setText(_translate("integrated", textArr[13]))
            item = self.tableWidget.item(2, 0)
            item.setText(_translate("integrated", textArr[14]))
            item = self.tableWidget.item(2, 1)
            item.setText(_translate("integrated", textArr[15]))
            item = self.tableWidget.item(2, 2)
            item.setText(_translate("integrated", textArr[16]))
            item = self.tableWidget.item(2, 3)
            item.setText(_translate("integrated", textArr[17]))
            item = self.tableWidget.item(2, 4)
            item.setText(_translate("integrated", textArr[18]))
            item = self.tableWidget.item(2, 5)
            item.setText(_translate("integrated", textArr[19]))
            item = self.tableWidget.item(2, 6)
            item.setText(_translate("integrated", textArr[20]))
            item = self.tableWidget.item(3, 0)
            item.setText(_translate("integrated", textArr[21]))
            item = self.tableWidget.item(3, 1)
            item.setText(_translate("integrated", textArr[22]))
            item = self.tableWidget.item(3, 2)
            item.setText(_translate("integrated", textArr[23]))
            item = self.tableWidget.item(3, 3)
            item.setText(_translate("integrated", textArr[24]))
            item = self.tableWidget.item(3, 4)
            item.setText(_translate("integrated", textArr[25]))
            item = self.tableWidget.item(3, 5)
            item.setText(_translate("integrated", textArr[26]))
            item = self.tableWidget.item(3, 6)
            item.setText(_translate("integrated", textArr[27]))
            item = self.tableWidget.item(4, 0)
            item.setText(_translate("integrated", textArr[28]))
            item = self.tableWidget.item(4, 1)
            item.setText(_translate("integrated", textArr[29]))
            item = self.tableWidget.item(4, 2)
            item.setText(_translate("integrated", textArr[30]))
            item = self.tableWidget.item(4, 3)
            item.setText(_translate("integrated", textArr[31]))
            item = self.tableWidget.item(4, 4)
            item.setText(_translate("integrated", textArr[32]))
            item = self.tableWidget.item(4, 5)
            item.setText(_translate("integrated", textArr[33]))
            item = self.tableWidget.item(4, 6)
            item.setText(_translate("integrated", textArr[34]))

    def savemat_file(self):
        options = QFileDialog.Options()
        fileName, _ = QFileDialog.getSaveFileName(self,"Save Materials","","All Files (*);;Text Files (*.txt)", options=options)
        if fileName:
            file = open(fileName, 'w')
            rows = self.tableWidget.rowCount()
            columns = self.tableWidget.columnCount()
            strList = []
            for i in range(rows):
                for j in range(columns):
                    strList.append(self.tableWidget.item(i,j).text())
            file.write('/'.join(strList))
            file.close()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = Materials()
    
    sys.exit(app.exec_())
